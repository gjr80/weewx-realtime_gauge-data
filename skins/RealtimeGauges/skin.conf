###############################################################################
#                                                                             #
#                   RealtimeGauges Skin Configuration File                    #
#                                                                             #
# Version: 0.1.0                                      Date: 14 May 2021       #
#                                                                             #
###############################################################################

[CheetahGenerator]

    # Possible encodings are 'html_entities', 'utf8', or 'strict_ascii'
    encoding = html_entities

    [[ToDate]]
        [[[gauges]]]
            template = ssgauges.html.tmpl

[CopyGenerator]

    # This specifies the files to be copied from the RealtimeGauges skin
    # directory. It only copies pre-existing files and DOES NOT copy report
    # or image files generated by the skin.

    # copy css and JavaScript files once only on WeeWX startup
    # copy_once = ssg/css/*.css, ssg/scripts/*.js
    copy_always = ssg/css/*.css, ssg/scripts/*.js

[ImageGenerator]

    # This section defines the images to be generated and used as popup images/
    # tooltips when the mouse is hovered over a gauge, what SQL types are to
    # be included in them, along with many plotting options, such as color or
    # font. There is a default for almost everything, if not specified below.
    # Nevertheless, explicit values have been included for many options to make
    # it easy to see and understand the options. Many options are self
    # explanatory but you may refer to the Customization Guide
    # (http://weewx.com/docs/customizing.htm#ImageGenerator) for further
    # details on available options.

    image_width = 620
    image_height = 248

    # Colors can be specified any of three ways:
    #   1. Notation 0xBBGGRR;
    #   2. Notation #RRGGBB; or
    #   3. Using an English name, such as 'yellow', or 'blue'.
    # So 0xff0000, #0000ff, or 'blue' would all specify a pure blue color.
    image_background_color = 0xffffff
    chart_background_color = 0xffffff
    chart_gridline_color = 0xeaeaea

    # Fonts can be anything accepted by the Python Imaging Library (PIL), which
    # is currently truetype (.ttf), or PIL's own font format (.pil). See
    # http://www.pythonware.com/library/pil/handbook/imagefont.htm for more
    # details. Note that "font size" is only used with truetype (.ttf) fonts.
    # For others, font size is determined by the bit-mapped size, usually
    # encoded in the file name (eg courB010.pil). If a font can't be found,
    # then a default font will be used.
    top_label_font_path = font/OpenSans-Bold.ttf
    top_label_font_size = 10

    unit_label_font_path = font/OpenSans-Bold.ttf
    unit_label_font_size = 10
    unit_label_font_color = 0xaaaaaa

    bottom_label_font_path = font/OpenSans-Regular.ttf
    bottom_label_font_size = 10
    bottom_label_font_color = 0xaaaaaa

    axis_label_font_path = font/OpenSans-Regular.ttf
    axis_label_font_size = 10
    axis_label_font_color = 0xaaaaaa

    rose_label = N
    rose_label_font_path = font/OpenSans-Regular.ttf
    rose_label_font_size  = 8
    rose_label_font_color = 0x888888
    rose_color = 0xaaaaaa

    chart_line_colors = 0x1e69d2, 0x8b008b, 0xa09e5f, 0x8080f0
    chart_fill_colors = 0x7ec9f2, 0xeb00eb, 0xf0febf, 0xe0e0f0
    chart_line_width = 1

    # type of line, may be 'solid' or 'none'
    line_type = 'solid'
    # size of marker in pixels
    marker_size = 2
    # type of marker, may be one of 'cross', 'x', 'circle', 'box', or 'none'
    marker_type ='none'
    # default plot type and aggregation
    plot_type = line
    aggregate_type = none

    # The y-axis scale used for plotting can be controlled using option
    # 'yscale'. It is a 3-way tuple, with values (ylow, yhigh, min_interval).
    # If set to 'None', a parameter is set automatically, otherwise the
    # specified value is used. However, in the case of min_interval, what is
    # set is the *minimum* y-axis tick interval.
    yscale = None, None, None

    line_gap_fraction = 0.01
    bar_gap_fraction = 0.2

    # whether to show day/night bands on plots
    show_daynight = true
    # these control the appearance of the bands if they are shown
    daynight_day_color = 0xffffff
    daynight_night_color = 0xf8f0f0
    daynight_edge_color = 0xafefef

    bottom_label_format = %x %X
    time_length = 90000

    [[images]]
        x_label_format = %H:%M

        [[[dayinouttemp]]]
            y_label_format = %.0f
            [[[[outTemp]]]]
                color = red
            # some users prefer not to display indoor data, uncomment to
            # include inHumidity on the humidity plot
            # [[[[inTemp]]]]
            #     color = blue

        [[[dayouttemphum]]]
            y_label_format = %.0f
            [[[[outTemp]]]]
                color = red
            # uncomment to include relevant obs in plot
            # [[[[dewpoint]]]]
            # [[[[windchill]]]]
            # [[[[heatindex]]]]
            # [[[[humidex]]]]
            # [[[[appTemp]]]]

        [[[dayrain]]]
            yscale = None, None, 0.2
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
                label = Rain (hourly total)
                color = blue

        [[[dayrainrate]]]
            yscale = None, None, 0.2
            y_label_format = %.0f
            [[[[rainRate]]]]
                color = blue

        [[[dayinouthum]]]
            yscale = 0, 100, 10
            y_label_format = %.0f
            [[[[outHumidity]]]]
                color = blue
            # some users prefer not to display indoor data, uncomment to
            # include inHumidity on the humidity plot
            # [[[[inHumidity]]]]
            #     color = red

        [[[daybarometer]]]
            y_label_format = %.0f
            [[[[barometer]]]]
                color = blue

        [[[daywind]]]
            [[[[windSpeed]]]]
                color = blue
            [[[[windGust]]]]
                color = red

        [[[daywinddir]]]
            line_type = none
            y_label_format = %.0f
            # hardwire the y-axis scale for wind direction
            yscale = 0.0, 360.0, 45.0
            [[[[windDir]]]]
                color = blue
                marker_size = 2
                marker_type = circle

        # uncomment if station includes UV sensor
        # [[[dayuv]]]
        #     y_label_format = %.0f
        #     # hardwire the y-axis scale for UV index
        #     yscale = 0, 16, 2
        #     [[[[UV]]]]
        #         color = blue
        #         label = UV Index

        # uncomment if station includes UV sensor
        # [[[dayradiation]]]
        #     y_label_format = %.0f
        #     [[[[radiation]]]]
        #         color = red
        #         label = Solar Radiation
        #     [[[[maxSolarRad]]]]
        #         color = blue
        #         label = Theoretical Max

        [[[daywindvec]]]
            [[[[windvec]]]]
                plot_type = vector
            [[[[windgustvec]]]]
                plot_type = vector
                aggregate_type = max
                aggregate_interval = 3600

[Generators]
        generator_list = weewx.cheetahgenerator.CheetahGenerator, weewx.reportengine.CopyGenerator, weewx.imagegenerator.ImageGenerator
